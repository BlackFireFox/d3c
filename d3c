#!/usr/bin/env python
import sys,os,string,getpass,base64,d3c
def istext(filename):
	s=open(filename).read(512)
	text_characters = "".join(map(chr, range(32, 127)) + list("\n\r\t\b"))
	_null_trans = string.maketrans("", "")
	if not s:
		# Empty files are considered text
		return True
	if "\0" in s:
		# Files with null bytes are likely binary
		return False
	# Get the non-text characters (maps a character to itself then
	# use the 'remove' option to get rid of the text characters.)
	t = s.translate(_null_trans, text_characters)
	# If more than 30% non-text characters, then
	# this is considered a binary file
	if float(len(t))/float(len(s)) > 0.30:
		return False
	return True
e=0
try:
	ed=sys.argv[1]
	text=sys.argv[2]
	if text.startswith("-_-"):
		text=text[3:]
	else:
		if not ";" in text:
			if text.startswith("~/"):
				text=os.path.expanduser("~")+text[1:]
			if os.path.isfile(text):
				if istext(text):
					text=open(text,"r").read()
				else:
					try:
						text=base64.b64encode(open(text,"r").read())
					except:
						print "'"+text+"' isn't a text file"
			else:
				print "'"+text+"' file not found."
				sys.exit()
	pw=sys.argv[3]
	if pw=="-?":
		pw=getpass.getpass("Password: ")
	ty=sys.argv[4]
	if ed=="e":
		c=d3c.en(text,pw,ty)
	elif ed=="d":
		try:
			c=d3c.de(text,pw,ty)
		except:
			e=1
			sys.exit()
	else:
		e=0
		sys.exit()
	try:
		if sys.argv[5]!="":
			if sys.argv[5].startswith("~/"):
				sys.argv[5]=os.path.expanduser("~")+sys.argv[5][1:]
		open(sys.argv[5],"w").write(c)
		print "To '"+sys.argv[5]+"'"
	except:
		print c
except:
	if e==0:
		print "Usage:\nd3c [e/d] [-_-text/file] [password] [type(0/1)] [where save output(optional)]\n\tInsert -? as password\n\tto get asked later"
	elif e==1:
		print "Invalid password"